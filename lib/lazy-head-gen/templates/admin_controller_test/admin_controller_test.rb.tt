require File.expand_path(File.dirname(__FILE__) + '/../../test_config.rb')

describe "Admin::<%= @controller if @controller %>Controller" do

  # START LOGGED IN
  describe "when logged in" do
    before do
      @account = Account.make!
      login_as(@account)
    end

    # START GET index
    describe "GET index" do
      before do
        get Admin.url(:<%= @pluralized %>, :index)
      end

      it "should display the <%= @pluralized %> index page" do
        assert_equal 200, last_response.status
        assert_equal Admin.url(:<%= @pluralized %>, :index), last_request.path
      end
    end
    # END GET index

    # START GET new
    describe "GET new" do
      before do
        get Admin.url(:<%= @pluralized %>, :new)
      end

      it "should display the <%= @pluralized %> new page" do
        assert_equal 200, last_response.status
        assert_equal Admin.url(:<%= @pluralized %>, :new), last_request.path
      end
    end
    # END GET new

    # START POST create
    describe "POST create" do
      before do
        @<%= @singular %>_count = <%= @model %>.count
        post Admin.url(:<%= @pluralized %>, :create), :<%= @singular %> => <%= @model %>.make.attributes
        follow_redirect!
      end

      it "should redirect to the edit page" do
        assert_equal Admin.url(:<%= @pluralized %>, :edit, :id => <%= @model %>.last.to_param), last_request.path
      end

      it "should create a <%= @singular %>" do
        assert_equal @<%= @singular %>_count + 1, <%= @model %>.count
      end
    end
    # END POST create

    # START GET edit
    describe "GET edit" do
      before do
        @<%= @singular %> = <%= @model %>.make!
        get Admin.url(:<%= @pluralized %>, :edit, :id => @<%= @singular %>.to_param)
      end

      it "should display the <%= @pluralized %> edit page" do
        assert_equal 200, last_response.status
        assert_equal Admin.url(:<%= @pluralized %>, :edit, :id => @<%= @singular %>.to_param), last_request.path
      end
    end
    # END GET edit

    # START PUT update
    describe "PUT update" do
      before do
        @<%= @singular %> = <%= @model %>.make!
        @<%= @singular %>_count = <%= @model %>.count

        put Admin.url(:<%= @pluralized %>, :update, :id => @<%= @singular %>.to_param),
          :<%= @singular %> => <%= @model %>.make.attributes

        @<%= @singular %>.reload
        follow_redirect!
      end

      it "should redirect to the edit page" do
        assert_equal Admin.url(:<%= @pluralized %>, :edit, :id => @<%= @singular %>.to_param), last_request.path
      end

      it "should not create a new a <%= @singular %>" do
        assert_equal @<%= @singular %>_count, <%= @model %>.count
      end
    end
    # END PUT update

    # START DELETE destroy
    describe "DELETE destroy" do
      before do
        @<%= @singular %> = <%= @model %>.make!
        @<%= @singular %>_count = <%= @model %>.count
        delete Admin.url(:<%= @pluralized %>, :destroy, :id => @<%= @singular %>.to_param)
        follow_redirect!
      end

      it "should redirect to the index page" do
        assert_equal Admin.url(:<%= @pluralized %>, :index), last_request.path
      end

      it "should destroy a <%= @singular %>" do
        assert_equal @<%= @singular %>_count - 1, <%= @model %>.count
      end
    end
    # END DELETE destroy

  end
  # END LOGGED IN

  # START NOT LOGGED IN
  describe "when not logged in" do

    # START GET index
    describe "GET index" do
      before do
        get Admin.url(:<%= @pluralized %>, :index)
      end

      it "should not display the <%= @pluralized %> index page" do
        assert_admin_not_logged_in
      end
    end
    # END GET index

    # START GET new
    describe "GET new" do
      before do
        get Admin.url(:<%= @pluralized %>, :new)
      end

      it "should not display the <%= @pluralized %> new page" do
        assert_admin_not_logged_in
      end
    end
    # END GET new

    # START POST create
    describe "Post create" do
      before do
        post Admin.url(:<%= @pluralized %>, :create), :<%= @singular %> => <%= @model %>.make.attributes
      end

      it "should not return the created text" do
        assert_admin_not_logged_in
      end
    end
    # END POST create

    # START GET edit
    describe "GET edit" do
      before do
        get Admin.url(:<%= @pluralized %>, :edit, :id => 1)
      end

      it "should not display the <%= @pluralized %> edit page" do
        assert_admin_not_logged_in
      end
    end
    # END GET edit

    # START PUT update
    describe "PUT update" do
      before do
        put Admin.url(:<%= @pluralized %>, :update, :id => 1), :<%= @singular %> => <%= @model %>.make.attributes
      end

      it "should not return the updated text" do
        assert_admin_not_logged_in
      end
    end
    # END PUT update

    # START DELETE destroy
    describe "on DELETE destroy" do
      before do
        delete Admin.url(:<%= @pluralized %>, :destroy, :id => 1)
      end

      it "should not return the destroyed text" do
        assert_admin_not_logged_in
      end
    end
    # END DELETE destroy

  end
  # END NOT LOGGED IN

end